mat<- matrix(4,2,7,6)
mat
mat<- matrix(c(4,2,7,6)2,2)
?matrix
mat<- matrix(c(4,2,7,6),2,2)
mat
solve(mat)
makemat<-function(x = matrix("numeric")){
i<-null
set<-function(y){
x<<-y
i<<-null
}
get<-function()x
setinverse<-function(solution)m<<-solution
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
makeCacheMatrix<- function(x, ...) {
i<-x$getinverse()
if(!is.null(i)){
message("getting cached data")
return(i)
}
data<-x$get()
i<-solve(data, ...)
x$save(i)
i
}
makeCacheMatrix(mat)
makemat(mat)
mat
makemat<-function(x = matrix("numeric")){
i<-null
set<-function(y){
x<<-y
i<<-null
}
get<-function()x
setinverse<-function(solution)m<<-solution
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
makemat(mat)
makemat
makemat(4,2,7,6)
makemat(matrix,(c(4,2,7,6)2,2)
makemat(matrix(c(4,2,7,6)2,2)
makemat(matrix(c(4,2,7,6),2,2)
a<- makemat(matrix(c(4,2,7,6),2,2)
makemat<-function(x = matrix){
i<-null
set<-function(y){
x<<-y
i<<-null
}
get<-function()x
setinverse<-function(solution)m<<-solution
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
a<- makemat(matrix(c(4,2,7,6),2,2)
(matrix(c(4,2,7,6),2,2)
)
a<- makemat(matrix(c(4,2,7,6),2,2)
)
makemat<-function(x = matrix("numeric")){
i<-null
set<-function(y){
x<<-y
i<<-NULL
}
get<-function()x
setinverse<-function(solution)m<<-solution
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
a<- makemat(matrix(c(4,2,7,6),2,2))
makemat<-function(x = matrix("numeric")){
i<-null
set<-function(y){
x<<-y
i<<-NULL
}
get<-function()x
setinverse<-function(solution)m<<-solution
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
makemat<-function(x = matrix("numeric")){
i<-NULL
set<-function(y){
x<<-y
i<<-NULL
}
get<-function()x
setinverse<-function(solution)m<<-solution
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
a<- makemat(matrix(c(4,2,7,6),2,2))
a$get()
a$getinverse()
makeCacheMatrix<- function(x, ...) {
i<-x$getinverse()
if(!is.null(i)){
message("getting cached data")
return(i)
}
data<-x$get()
i<-solve(data, ...)
x$save(i)
i
}
makeCacheMatrix(a)
makeCacheMatrix<- function(x, ...) {
i<-x$getinverse()
if(!is.null(i)){
message("getting cached data")
return(i)
}
data<-x$get()
i<-solve(data, ...)
x$setinverse(i)
i
}
makeCacheMatrix(a)
makeCacheMatrix(a)
data<-a
data
x$get()
a$get()
data<-a$get()
data
solve(data)
makeCacheMatrix<- function(x, ...) {
i<-x$getinverse()
if(!is.null(i)){
message("getting cached data")
return(i)
}
data<-x$get()
i<-solve(data)
x$setinverse(i)
i
}
makeCacheMatrix(a)
I<-solve(data)
i
I
a$setinverse(I)
setinverse<-function(solution)m<<-solution
setinverse
setinverse(i)
setinverse(I)
m
makeCacheMatrix(a)
a$setinverse(i)
a
makemat<-function(x = matrix("numeric")){
i<-NULL
set<-function(y){
x<<-y
i<<-NULL
}
get<-function()x
setinverse<-function(solution)m<<-solution
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
makemat(matrix(c(4,2,7,6),2,2))
a<-makemat(matrix(c(4,2,7,6),2,2))
a$get()
makeCacheMatrix<- function(x, ...) {
i<-x$getinverse()
if(!is.null(i)){
message("getting cached data")
return(i)
}
data<-x$get()
i<-solve(data)
x$setinverse(i)
i
}
makeCacheMatrix(a)
x$setinverse(i)
a$setinverse(i)
a
makemat<-function(x = matrix("numeric")){
i<-NULL
set<-function(y){
x<<-y
i<<-NULL
}
get<-function()x
setinverse<-function(inverse)m<<- inverse
getinverse<-function()i
list(set=set,get=get,
save=save,getinverse=getinverse)
}
a<-makemat(matrix(c(4,2,7,6),2,2))
makeCacheMatrix(a)
makemat<-function(x = matrix("numeric")){
i<-NULL
set<-function(y){
x<<-y
i<<-NULL
}
get<-function()x
setinverse<-function(inverse)m<<- inverse
getinverse<-function()i
list(set=set,get=get,
setinverse=setinverse,getinverse=getinverse)
}
makeCacheMatrix(a)
a<-makemat(matrix(c(4,2,7,6),2,2))
makeCacheMatrix(a)
makeCacheMatrix(a)
a$getmean()
a$getinverse()
makemat<-function(x = matrix("numeric")){
i<-NULL
set<-function(y){
x<<-y
i<<-NULL
}
get<-function()x
setinverse<-function(inverse)i<<- inverse
getinverse<-function()i
list(set=set,get=get,
setinverse=setinverse,getinverse=getinverse)
}
a<-makemat(matrix(c(4,2,7,6),2,2))
makeCacheMatrix(a)
makeCacheMatrix(a)
